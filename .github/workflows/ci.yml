name: CI

on:
  push:
    branches: [main]
  pull_request: {}

env:
  # ── Runtime & package-manager versions ──────────────────────────────
  NODE_VERSION: '20'      # change only if you truly need another Node LTS
  PNPM_VERSION: '9.1.1'   # must match the version in “packageManager” & lock-file

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1) Fetch the repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2) Install **pnpm 9.1.1** *and* Node 20 in one step
      - name: Setup pnpm + Node
        uses: pnpm/action-setup@v2   # v2 is the last release that bundles Node support
        with:
          version: ${{ env.PNPM_VERSION }}
          node-version: ${{ env.NODE_VERSION }}
          run_install: false        # we’ll call pnpm ourselves

      # 3) Cache pnpm’s global store to speed up subsequent runs
      - name: Restore pnpm cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      # 4) Install dependencies (strictly against the lock-file)
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # 5) Lint, test, (optional) type-check
      - name: Lint, tests, type-check
        run: |
          pnpm lint
          pnpm test
          # If you have a separate script for TS checks, uncomment:
          # pnpm run typecheck

      # 6) Build
      - name: Build
        run: pnpm build