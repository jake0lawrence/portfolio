name: Deploy to DigitalOcean

on:
  push:
    branches: [ main ]

env:
  NODE_VERSION: '20'
  PNPM_VERSION: '9.1.1'

jobs:
  deploy:
    runs-on: ubuntu-latest

    # ────────────────────────────────────────────────────────────────
    # 1.  Checkout repository
    # ────────────────────────────────────────────────────────────────
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    # ────────────────────────────────────────────────────────────────
    # 2.  Install Node (no cache arg → avoids the “pnpm not found” error)
    # ────────────────────────────────────────────────────────────────
    - name: Set up Node
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    # ────────────────────────────────────────────────────────────────
    # 3.  Install pnpm CLI
    # ────────────────────────────────────────────────────────────────
    - name: Set up pnpm
      uses: pnpm/action-setup@v2
      with:
        version: ${{ env.PNPM_VERSION }}
        run_install: false          # we don’t need `pnpm install` on the runner

    # ────────────────────────────────────────────────────────────────
    # 4.  Run the droplet deploy script
    # ────────────────────────────────────────────────────────────────
    - name: Deploy via SSH
      uses: appleboy/ssh-action@v1.0.0
      with:
        host:      ${{ secrets.DO_HOST }}
        username:  root
        key:       ${{ secrets.DO_SSH_KEY }}
        script: |
          /opt/deploy/portfolio.sh

    # ────────────────────────────────────────────────────────────────
    # 5.  Always fetch the remote deploy log
    # ────────────────────────────────────────────────────────────────
    - name: Fetch deploy log
      if: always()
      id: fetch_log
      uses: appleboy/ssh-action@v1.0.0
      with:
        host:      ${{ secrets.DO_HOST }}
        username:  root
        key:       ${{ secrets.DO_SSH_KEY }}
        script:    cat /var/log/portfolio-deploy.log

    # ────────────────────────────────────────────────────────────────
    # 6.  Save log to a file
    # ────────────────────────────────────────────────────────────────
    - name: Write deploy log file
      if: always()
      run: |
        mkdir -p deploy-log
        echo "${{ steps.fetch_log.outputs.stdout }}" > deploy-log/portfolio-deploy.log

    # ────────────────────────────────────────────────────────────────
    # 7.  Upload the log as an artifact
    # ────────────────────────────────────────────────────────────────
    - name: Upload deploy log
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: deploy-log
        path: deploy-log/portfolio-deploy.log
