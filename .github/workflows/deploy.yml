name: CI & Deploy to droplet

# ──────────────────────────────────────────────────────────────
# Triggers
# ──────────────────────────────────────────────────────────────
on:
  push:
    branches: [ main ]
  workflow_dispatch:

# ──────────────────────────────────────────────────────────────
# Global versions
# ──────────────────────────────────────────────────────────────
env:
  NODE_VERSION: "20"        # keep in sync with the droplet
  PNPM_VERSION: "10.12.1"   # lock major/minor for reproducibility

# ──────────────────────────────────────────────────────────────
# 1) Continuous-Integration job
# ──────────────────────────────────────────────────────────────
jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out code
      - name: ⬇️  Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Install both Node **and** pnpm in one shot
      - name: 🐣  Install pnpm + Node
        uses: pnpm/action-setup@v3
        with:
          version:       ${{ env.PNPM_VERSION }}   # pnpm version
          node-version:  ${{ env.NODE_VERSION }}   # Node version
          run_install:   false                     # we’ll run install below

      # 3. Install deps (cached automatically by pnpm/action-setup)
      - name: 📦  Install deps
        run: pnpm install --frozen-lockfile --silent

      # 4. Lint, test, production build
      - name: 🚦  Lint, test, build
        run: |
          pnpm lint
          pnpm test
          pnpm run build

# ──────────────────────────────────────────────────────────────
# 2) Deploy (only runs if CI passed & we’re on main)
# ──────────────────────────────────────────────────────────────
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: 🚀  Trigger DigitalOcean webhook
        env:
          WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}
          # Optional override via secret; falls back to canonical URL
          WEBHOOK_URL:    ${{ secrets.WEBHOOK_URL }}
        run: |
          URL="${WEBHOOK_URL:-https://jakelawrence.io/deploy}"
          echo "Curling $URL"
          curl --fail --silent --show-error \
            "${URL}?secret=${WEBHOOK_SECRET}"
