name: CI & Deploy to droplet

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: 20          # keep in sync with droplet
  PNPM_VERSION: 10.12.1     # lock so ‚Äúit works today‚Äù == ‚Äúit works next month‚Äù

jobs:
# ---------------------------------------------------------------------------
# 1) CI
# ---------------------------------------------------------------------------
  test:
    runs-on: ubuntu-latest

    steps:
      - name: ‚¨áÔ∏è Check out repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ‚öôÔ∏è  Install Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "pnpm"               # enable PNPM-aware cache

      - name: üê£ Install pnpm ${{ env.PNPM_VERSION }}
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false          # we‚Äôll call pnpm install manually

      - name: üì¶  Install deps
        run: pnpm install --frozen-lockfile --silent

      - name: üö¶  Lint, test, build
        run: |
          pnpm lint
          pnpm test
          pnpm run build

# ---------------------------------------------------------------------------
# 2) Deploy (only if CI succeeded)
# ---------------------------------------------------------------------------
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: üöÄ  Trigger DigitalOcean webhook
        env:
          WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}
          WEBHOOK_URL:    ${{ secrets.WEBHOOK_URL || 'https://jakelawrence.io/deploy' }}
        run: |
          echo "Curling $WEBHOOK_URL"
          curl --fail --silent --show-error \
            "${WEBHOOK_URL}?secret=${WEBHOOK_SECRET}"
